// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef MANDELBULB_EXPECTED_
# define MANDELBULB_EXPECTED_

const char *mandelbulb_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "bool f(vec4 v,vec3 f,vec3 t,out vec2 i)"
 "{"
   "vec3 y=f-v.xyz;"
   "float c=dot(y,t),e=c*c-dot(y,y)+v.w*v.w;"
   "if(e<0.)"
     "return false;"
   "e=sqrt(e);"
   "i.x=-c-e;"
   "i.y=-c+e;"
   "return true;"
 "}"
 "bool f(vec3 v,out float f,out vec4 y)"
 "{"
   "vec4 e=vec4(100);"
   "vec3 i=v;"
   "float t=dot(i,i);"
   "if(t>1e2)"
     "return f=.5*log(t)/pow(8.,0.),y=vec4(1),false;"
   "for(int x=1;x<7;x++)"
     "{"
       "\n#if 0\n"
       "float r=sqrt(dot(i,i)),c=acos(i.y/r),o=atan(i.x,i.z);"
       "r=pow(r,8.);"
       "c*=8.;"
       "o*=8.;"
       "i=v+r*vec3(sin(c)*sin(o),cos(c),sin(c)*cos(o));"
       "\n#else\n"
       "float n=i.x,s=n*n,d=s*s,m=i.y,z=m*m,p=i.z,w=p*p,l=w*w,g=s+w,C=inversesqrt(g*g*g*g*g*g*g),F=d+z*z+l-6.*z*w-6.*s*z+2.*w*s,G=s-z+w;"
       "i.x=v.x+64.*n*m*p*(s-w)*G*(d-6.*s*w+l)*F*C;"
       "i.y=v.y+-16.*z*g*G*G+F*F;"
       "i.z=v.z+-8.*m*G*(d*d-28.*d*s*w+70.*d*l-28.*s*w*l+l*l)*F*C;"
       "\n#endif\n"
       "t=dot(i,i);"
       "e=min(e,vec4(i.xyz*i.xyz,t));"
       "if(t>1e2)"
         "return y=e,f=.5*log(t)/pow(8.,float(x)),false;"
     "}"
   "y=e;"
   "f=0.;"
   "return true;"
 "}"
 "bool f(vec3 v,vec3 t,out float y,out vec3 i,out vec4 o)"
 "{"
   "vec4 e=vec4(0,0,0,1.25);"
   "vec2 c;"
   "if(!f(e,v,t,c))"
     "return false;"
   "if(c.y<.001)"
     "return false;"
   "if(c.x<.001)"
     "c.x=.001;"
   "if(c.y>1e20)"
     "c.y=1e20;"
   "float x;"
   "vec3 r;"
   "float s=1./sqrt(2.);"
   "for(float w=c.x;w<c.y;)"
     "{"
       "vec3 z=v+t*w;"
       "float m=clamp(.001*w*s,1e-6,.005),g=m*.1;"
       "vec4 C;"
       "float d;"
       "if(f(z,d,color))"
         "return y=w,i=normalize(r),o=color,true;"
       "float p;"
       "f(z+vec3(g,0,0),p,C);"
       "float l;"
       "f(z+vec3(0,g,0),l,C);"
       "float n;"
       "f(z+vec3(0,0,g),n,C);"
       "r=vec3(p-d,l-d,n-d);"
       "x=.5*d*g/length(r);"
       "if(x<m)"
         "return o=color,i=normalize(r),y=w,true;"
       "w+=x;"
     "}"
   "return false;"
 "}"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,i=v*vec2(1.33,1);"
   "vec3 y=vec3(.577),t=vec3(-.707,0,.707);"
   "float c=1.4+.2*cos(6.28318*time/20.);"
   "vec3 z=vec3(c*sin(6.28318*time/20.),.3-.4*sin(6.28318*time/20.),c*cos(6.28318*time/20.)),s=normalize(vec3(0,.1,0)-z),e=normalize(cross(s,vec3(0,1,0)));"
   "e=normalize(i.x*e+i.y*normalize(cross(e,s))+1.5*s);"
   "vec3 g,r;"
   "vec4 d;"
   "if(f(z,e,t,g,d))"
     "{"
       "vec3 x=z+t*e;"
       "float w=clamp(.2+.8*dot(y,g),0.,1.);"
       "w*=w;"
       "float m=clamp(.3+.7*dot(t,g),0.,1.),n=clamp(1.25*d.w-.4,0.,1.);"
       "n=n*n*.5+.5*n;"
       "float o;"
       "vec3 C;"
       "vec4 l;"
       "if(w>.001)"
         "if(f(x,y,o,C,l))"
           "w=.1;"
       "r=vec3(1);"
       "r=mix(r,vec3(.8,.6,.2),sqrt(d.x)*1.25);"
       "r=mix(r,vec3(.8,.3,.3),sqrt(d.y)*1.25);"
       "r=mix(r,vec3(.7,.4,.3),sqrt(d.z)*1.25);"
       "r*=(.5+.5*g.y)*vec3(.14,.15,.16)*.8+w*vec3(1,.85,.4)+.5*m*vec3(.08,.1,.14);"
       "r*=vec3(pow(n,.8),pow(n,1.),pow(n,1.1));"
       "r=1.5*(r*.15+.85*sqrt(r));"
     "}"
   "else"
     " r=1.3*vec3(1,.98,.9)*(.7+.3*e.y);"
   "v=v*.5+.5;"
   "r*=.7+4.8*v.x*v.y*(1.-v.x)*(1.-v.y);"
   "r=clamp(r,0.,1.);"
   "gl_FragColor=vec4(r,1);"
 "}";

#endif // MANDELBULB_EXPECTED_
